services:

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: Guitar_bot
    volumes:
      - postgres:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debu
    volumes:
      - grafana_data:/var/lib/grafana

  renderer:
    container_name: grafana-image-renderer
    image: grafana/grafana-image-renderer:latest
    environment:
      - ENABLE_METRICS=true
      - RENDERING_MODE=clustered
      - RENDERING_CLUSTERING_MODE=context
      - RENDERING_CLUSTERING_MAX_CONCURRENCY=6
    ports:
      - 8081:8081

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    volumes:
      - redis_data:/redis/
    restart: always

volumes:
  redis_data:
  postgres:
  prometheus_data:
  grafana_data: